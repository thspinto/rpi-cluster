---
# Source: home-assistant/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: home-assistant-config
  labels:
    helm.sh/chart: home-assistant-5.4.1
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/version: "2020.12.1"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
  storageClassName: "openebs-hostpath"
---
# Source: home-assistant/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: home-assistant
  labels:
    helm.sh/chart: home-assistant-5.4.1
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/version: "2020.12.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8123
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: home-assistant
---
# Source: home-assistant/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: home-assistant
  labels:
    helm.sh/chart: home-assistant-5.4.1
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/version: "2020.12.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: home-assistant
      app.kubernetes.io/instance: home-assistant
  template:
    metadata:
      labels:
        app.kubernetes.io/name: home-assistant
        app.kubernetes.io/instance: home-assistant
    spec:
      
      serviceAccountName: default
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
      - name: home-assistant
        image: "homeassistant/home-assistant:2021.1.3"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8123
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: config
        
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 30
          failureThreshold: 5
          timeoutSeconds: 10
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 30
          failureThreshold: 5
          timeoutSeconds: 10
          periodSeconds: 10
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: home-assistant-config
---
# Source: home-assistant/templates/common.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: home-assistant
  labels:
    helm.sh/chart: home-assistant-5.4.1
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/version: "2020.12.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: cert-manager
    external-dns.alpha.kubernetes.io/hostname: ""
    kubernetes.io/ingress.class: kong
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - hosts:
        - "home.thsp.dev"
      secretName: home-assistant
  rules:
    - host: "home.thsp.dev"
      http:
        paths:
          - path: /
            backend:
              serviceName: home-assistant
              servicePort: 8123
---
# Source: home-assistant/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: home-assistant
  labels:
    helm.sh/chart: home-assistant-5.4.1
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/version: "2020.12.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: home-assistant
      app.kubernetes.io/instance: home-assistant
  endpoints:
  - port: http
    path: /api/prometheus
